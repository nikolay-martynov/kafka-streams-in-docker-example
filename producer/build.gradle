import java.util.concurrent.TimeUnit

plugins {
    id 'groovy'
    id 'application'
    id 'com.palantir.docker' version '0.21.0'
}
dependencies {
    implementation 'org.codehaus.groovy:groovy'
    implementation 'org.codehaus.groovy:groovy-cli-commons'
    implementation 'org.codehaus.groovy:groovy-json'
    implementation 'org.apache.kafka:kafka-clients:2.1.0'
    implementation platform('org.apache.logging.log4j:log4j-bom:2.11.2')
    implementation 'org.apache.logging.log4j:log4j-core'
    implementation 'org.apache.logging.log4j:log4j-api'
    implementation 'org.apache.logging.log4j:log4j-1.2-api'
    implementation 'org.apache.logging.log4j:log4j-jcl'
    implementation 'org.apache.logging.log4j:log4j-jul'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl'
    testImplementation 'org.spockframework:spock-core:1.2-groovy-2.5'
}
configurations.configureEach {
    it.resolutionStrategy {
        cacheChangingModulesFor(0, TimeUnit.SECONDS)
        eachDependency { DependencyResolveDetails details ->
            if (details.requested.group == 'org.codehaus.groovy') {
                details.useVersion "2.5.6"
            }
            if (details.requested.group == "log4j" && details.requested.name == "log4j") {
                details.useTarget("org.apache.logging.log4j:log4j-1.2-api")
            }
        }
    }
}

mainClassName = 'example.ExampleProducer'
docker {
    name 'example/kafka_in_docker.producer'
    files tasks.distTar.outputs
}
tasks.named("build").configure {Task it->
    it.dependsOn tasks.named("docker")
}
